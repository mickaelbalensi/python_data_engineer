import os
import mysql.connector
from mysql.connector import Error
from bs4 import BeautifulSoup

# Path to the local folder containing the HTML pages
LOCAL_HTML_FOLDER = '/path/to/your/html/folder'

def connect_to_mysql():
    """Connects to MySQL and returns the connection object."""
    try:
        connection = mysql.connector.connect(
            host='127.0.0.1',
            database='wiki_scraper_db',
            user='root',
            password='rootpassword'
        )
        if connection.is_connected():
            print("Connected to MySQL")
            return connection
    except Error as e:
        print("Error while connecting to MySQL", e)
        return None

def insert_html_page(connection, url, html_content):
    """Inserts an HTML page into the database and returns its ID."""
    cursor = connection.cursor()
    insert_query = """INSERT INTO htmlpage_table (url, html_content)
                      VALUES (%s, %s)"""
    cursor.execute(insert_query, (url, html_content))
    connection.commit()
    return cursor.lastrowid

def insert_category(connection, category_name):
    """Inserts a category if not already in the database, then returns its ID."""
    cursor = connection.cursor()
    cursor.execute("SELECT id FROM categories_table WHERE category_name = %s", (category_name,))
    result = cursor.fetchone()
    
    if result:
        return result[0]  # Return existing category ID
    else:
        insert_query = """INSERT INTO categories_table (category_name)
                          VALUES (%s)"""
        cursor.execute(insert_query, (category_name,))
        connection.commit()
        return cursor.lastrowid

def link_html_and_category(connection, htmlpage_id, category_id):
    """Links an HTML page to a category in the relational table."""
    cursor = connection.cursor()
    insert_query = """INSERT INTO html_categories_table (htmlpage_id, category_id)
                      VALUES (%s, %s)"""
    cursor.execute(insert_query, (htmlpage_id, category_id))
    connection.commit()

def extract_categories_from_html(html_content):
    """Extracts categories from a Wikipedia HTML page."""
    soup = BeautifulSoup(html_content, 'html.parser')
    
    # Find the category section in Wikipedia HTML
    category_section = soup.find('div', {'id': 'mw-normal-catlinks'})
    
    categories = []
    if category_section:
        category_links = category_section.find_all('a')[1:]  # Skip the first link ("Categories")
        categories = [link.get_text().strip() for link in category_links]

    return categories

def process_html_folder(connection):
    """Processes all HTML files in the local folder and stores them in MySQL."""
    for filename in os.listdir(LOCAL_HTML_FOLDER):
        if filename.endswith('.html'):
            file_path = os.path.join(LOCAL_HTML_FOLDER, filename)
            
            with open(file_path, 'r', encoding='utf-8') as file:
                content = file.read()

            # Extract categories from the HTML file
            categories = extract_categories_from_html(content)
            
            # Insert HTML page into database
            page_id = insert_html_page(connection, file_path, content)
            
            # Insert categories and link them to the page
            for category in categories:
                category_id = insert_category(connection, category)
                link_html_and_category(connection, page_id, category_id)

# Main script execution
conn = connect_to_mysql()
if conn:
    process_html_folder(conn)
    conn.close()
